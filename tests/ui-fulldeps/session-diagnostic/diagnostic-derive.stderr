error: unsupported type attribute for diagnostic derive enum
  --> $DIR/diagnostic-derive.rs:45:1
   |
LL | #[diag(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:48:5
   |
LL |     Foo,
   |     ^^^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:50:5
   |
LL |     Bar,
   |     ^^^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[nonsense(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:62:1
   |
LL | #[nonsense(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:62:1
   |
LL | / #[nonsense(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | | #[must_use]
LL | | struct InvalidStructAttr {}
   | |___________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:70:1
   |
LL | / #[diag("E0123")]
LL | |
LL | | #[must_use]
LL | | struct InvalidLitNestedAttr {}
   | |______________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: diagnostic slug must be the first argument
  --> $DIR/diagnostic-derive.rs:82:16
   |
LL | #[diag(nonsense("foo"), code = "E0123", slug = "foo")]
   |                ^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:82:1
   |
LL | / #[diag(nonsense("foo"), code = "E0123", slug = "foo")]
LL | |
LL | |
LL | | #[must_use]
LL | | struct InvalidNestedStructAttr1 {}
   | |__________________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: unknown argument
  --> $DIR/diagnostic-derive.rs:89:8
   |
LL | #[diag(nonsense = "...", code = "E0123", slug = "foo")]
   |        ^^^^^^^^
   |
   = note: only the `code` parameter is valid after the slug

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:89:1
   |
LL | / #[diag(nonsense = "...", code = "E0123", slug = "foo")]
LL | |
LL | |
LL | | #[must_use]
LL | | struct InvalidNestedStructAttr2 {}
   | |__________________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: unknown argument
  --> $DIR/diagnostic-derive.rs:96:8
   |
LL | #[diag(nonsense = 4, code = "E0123", slug = "foo")]
   |        ^^^^^^^^
   |
   = note: only the `code` parameter is valid after the slug

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:96:1
   |
LL | / #[diag(nonsense = 4, code = "E0123", slug = "foo")]
LL | |
LL | |
LL | | #[must_use]
LL | | struct InvalidNestedStructAttr3 {}
   | |__________________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: unknown argument
  --> $DIR/diagnostic-derive.rs:103:42
   |
LL | #[diag(no_crate_example, code = "E0123", slug = "foo")]
   |                                          ^^^^
   |
   = note: only the `code` parameter is valid after the slug

error: `#[suggestion = ...]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:112:5
   |
LL |     #[suggestion = "bar"]
   |     ^^^^^^^^^^^^^^^^^^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:119:8
   |
LL | #[diag(no_crate_example, code = "E0456")]
   |        ^^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:118:8
   |
LL | #[diag(no_crate_example, code = "E0123")]
   |        ^^^^^^^^^^^^^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:119:26
   |
LL | #[diag(no_crate_example, code = "E0456")]
   |                          ^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:118:26
   |
LL | #[diag(no_crate_example, code = "E0123")]
   |                          ^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:126:42
   |
LL | #[diag(no_crate_example, code = "E0456", code = "E0457")]
   |                                          ^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:126:26
   |
LL | #[diag(no_crate_example, code = "E0456", code = "E0457")]
   |                          ^^^^

error: diagnostic slug must be the first argument
  --> $DIR/diagnostic-derive.rs:132:43
   |
LL | #[diag(no_crate_example, no_crate::example, code = "E0456")]
   |                                           ^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:138:1
   |
LL | / #[must_use]
LL | | struct KindNotProvided {}
   | |_________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:142:1
   |
LL | / #[diag(code = "E0456")]
LL | |
LL | | #[must_use]
LL | | struct SlugNotProvided {}
   | |_________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: the `#[primary_span]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/diagnostic-derive.rs:156:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^

error: `#[nonsense]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:165:5
   |
LL |     #[nonsense]
   |     ^^^^^^^^^^^

error: the `#[label(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/diagnostic-derive.rs:184:5
   |
LL |     #[label(no_crate_label)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

error: `name` doesn't refer to a field on this type
  --> $DIR/diagnostic-derive.rs:193:46
   |
LL |     #[suggestion(no_crate_suggestion, code = "{name}")]
   |                                              ^^^^^^^^

error: invalid format string: expected `'}'` but string was terminated
  --> $DIR/diagnostic-derive.rs:198:10
   |
LL | #[derive(Diagnostic)]
   |          ^^^^^^^^^^ expected `'}'` in format string
   |
   = note: if you intended to print `{`, you can escape it using `{{`
   = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid format string: unmatched `}` found
  --> $DIR/diagnostic-derive.rs:209:10
   |
LL | #[derive(Diagnostic)]
   |          ^^^^^^^^^^ unmatched `}` in format string
   |
   = note: if you intended to print `}`, you can escape it using `}}`
   = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)

error: the `#[label(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/diagnostic-derive.rs:232:5
   |
LL |     #[label(no_crate_label)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

error: suggestion without `code = "..."`
  --> $DIR/diagnostic-derive.rs:253:5
   |
LL |     #[suggestion(no_crate_suggestion)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: invalid nested attribute
  --> $DIR/diagnostic-derive.rs:262:18
   |
LL |     #[suggestion(nonsense = "bar")]
   |                  ^^^^^^^^
   |
   = help: only `no_span`, `style`, `code` and `applicability` are valid nested attributes

error: suggestion without `code = "..."`
  --> $DIR/diagnostic-derive.rs:262:5
   |
LL |     #[suggestion(nonsense = "bar")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: invalid nested attribute
  --> $DIR/diagnostic-derive.rs:272:18
   |
LL |     #[suggestion(msg = "bar")]
   |                  ^^^
   |
   = help: only `no_span`, `style`, `code` and `applicability` are valid nested attributes

error: suggestion without `code = "..."`
  --> $DIR/diagnostic-derive.rs:272:5
   |
LL |     #[suggestion(msg = "bar")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

error: wrong field type for suggestion
  --> $DIR/diagnostic-derive.rs:298:5
   |
LL | /     #[suggestion(no_crate_suggestion, code = "This is suggested code")]
LL | |
LL | |     suggestion: Applicability,
   | |_____________________________^
   |
   = help: `#[suggestion(...)]` should be applied to fields of type `Span` or `(Span, Applicability)`

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:316:24
   |
LL |     suggestion: (Span, Span, Applicability),
   |                        ^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:316:18
   |
LL |     suggestion: (Span, Span, Applicability),
   |                  ^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:325:33
   |
LL |     suggestion: (Applicability, Applicability, Span),
   |                                 ^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:325:18
   |
LL |     suggestion: (Applicability, Applicability, Span),
   |                  ^^^^^^^^^^^^^

error: `#[label = ...]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:333:5
   |
LL |     #[label = "bar"]
   |     ^^^^^^^^^^^^^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:503:5
   |
LL |     #[suggestion(no_crate_suggestion, code = "...", applicability = "maybe-incorrect")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:505:24
   |
LL |     suggestion: (Span, Applicability),
   |                        ^^^^^^^^^^^^^

error: invalid applicability
  --> $DIR/diagnostic-derive.rs:512:69
   |
LL |     #[suggestion(no_crate_suggestion, code = "...", applicability = "batman")]
   |                                                                     ^^^^^^^^

error: the `#[help(...)]` attribute can only be applied to fields of type `Span`, `MultiSpan`, `bool` or `()`
  --> $DIR/diagnostic-derive.rs:586:5
   |
LL |     #[help(no_crate_help)]
   |     ^^^^^^^^^^^^^^^^^^^^^^

error: a diagnostic slug must be the first argument to the attribute
  --> $DIR/diagnostic-derive.rs:596:32
   |
LL |     #[label(no_crate_label, foo)]
   |                                ^

error: only `no_span` is a valid nested attribute
  --> $DIR/diagnostic-derive.rs:605:29
   |
LL |     #[label(no_crate_label, foo = "...")]
   |                             ^^^

error: only `no_span` is a valid nested attribute
  --> $DIR/diagnostic-derive.rs:614:29
   |
LL |     #[label(no_crate_label, foo("..."))]
   |                             ^^^

error: `#[primary_span]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:626:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^
   |
   = help: the `primary_span` field attribute is not valid for lint diagnostics

error: `#[error(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:648:1
   |
LL | #[error(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:648:1
   |
LL | / #[error(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | | #[must_use]
LL | | struct ErrorAttribute {}
   | |________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[warn_(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:656:1
   |
LL | #[warn_(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:656:1
   |
LL | / #[warn_(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | | #[must_use]
LL | | struct WarnAttribute {}
   | |_______________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[lint(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:664:1
   |
LL | #[lint(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:664:1
   |
LL | / #[lint(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | | #[must_use]
LL | | struct LintAttributeOnSessionDiag {}
   | |____________________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[lint(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:672:1
   |
LL | #[lint(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[lint(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:672:1
   |
LL | #[lint(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:672:1
   |
LL | / #[lint(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | |
LL | | struct LintAttributeOnLintDiag {}
   | |_________________________________^
   |
   = help: specify the slug as the first argument to the attribute, such as `#[diag(compiletest_example)]`

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:683:53
   |
LL |     #[suggestion(no_crate_suggestion, code = "...", code = ",,,")]
   |                                                     ^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:683:39
   |
LL |     #[suggestion(no_crate_suggestion, code = "...", code = ",,,")]
   |                                       ^^^^

error: wrong types for suggestion
  --> $DIR/diagnostic-derive.rs:693:24
   |
LL |     suggestion: (Span, usize),
   |                        ^^^^^
   |
   = help: `#[suggestion(...)]` on a tuple field must be applied to fields of type `(Span, Applicability)`

error: wrong types for suggestion
  --> $DIR/diagnostic-derive.rs:702:17
   |
LL |     suggestion: (Span,),
   |                 ^^^^^^^
   |
   = help: `#[suggestion(...)]` on a tuple field must be applied to fields of type `(Span, Applicability)`

error: suggestion without `code = "..."`
  --> $DIR/diagnostic-derive.rs:710:5
   |
LL |     #[suggestion(no_crate_suggestion)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[multipart_suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:717:1
   |
LL | #[multipart_suggestion(no_crate_suggestion)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider creating a `Subdiagnostic` instead

error: `#[multipart_suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:720:1
   |
LL | #[multipart_suggestion()]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider creating a `Subdiagnostic` instead

error: `#[multipart_suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:725:5
   |
LL |     #[multipart_suggestion(no_crate_suggestion)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider creating a `Subdiagnostic` instead

error: `#[suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:733:1
   |
LL | #[suggestion(no_crate_suggestion, code = "...")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `#[label]` and `#[suggestion]` can only be applied to fields

error: `#[label]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:743:1
   |
LL | #[label]
   | ^^^^^^^^
   |
   = help: `#[label]` and `#[suggestion]` can only be applied to fields

error: `eager` is the only supported nested attribute for `subdiagnostic`
  --> $DIR/diagnostic-derive.rs:780:7
   |
LL |     #[subdiagnostic(bad)]
   |       ^^^^^^^^^^^^^^^^^^

error: `#[subdiagnostic = ...]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:789:5
   |
LL |     #[subdiagnostic = "bad"]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

error: `eager` is the only supported nested attribute for `subdiagnostic`
  --> $DIR/diagnostic-derive.rs:798:7
   |
LL |     #[subdiagnostic(bad, bad)]
   |       ^^^^^^^^^^^^^^^^^^^^^^^

error: `eager` is the only supported nested attribute for `subdiagnostic`
  --> $DIR/diagnostic-derive.rs:807:7
   |
LL |     #[subdiagnostic("bad")]
   |       ^^^^^^^^^^^^^^^^^^^^

error: `#[subdiagnostic(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:815:5
   |
LL |     #[subdiagnostic(eager)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: eager subdiagnostics are not supported on lints

error: expected at least one string literal for `code(...)`
  --> $DIR/diagnostic-derive.rs:879:23
   |
LL |     #[suggestion(code())]
   |                       ^

error: `code(...)` must contain only string literals
  --> $DIR/diagnostic-derive.rs:888:23
   |
LL |     #[suggestion(code(foo))]
   |                       ^^^

error: `#[suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:915:5
   |
LL |     #[suggestion(no_crate_suggestion, code = "")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[suggestion(...)]` applied to `Vec` field is ambiguous
   = help: to show a suggestion consisting of multiple parts, use a `Subdiagnostic` annotated with `#[multipart_suggestion(...)]`
   = help: to show a variable set of suggestions, use a `Vec` of `Subdiagnostic`s annotated with `#[suggestion(...)]`

error: You must mark diagnostic structs with `#[must_use]`
  --> $DIR/diagnostic-derive.rs:921:1
   |
LL | / #[diag(no_crate_example)]
LL | | struct MissingMustUseAttr {}
   | |____________________________^

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/diagnostic-derive.rs:56:8
   |
LL | #[diag = "E0123"]
   |        ^ maybe a missing crate `core`?

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/diagnostic-derive.rs:888:23
   |
LL |     #[suggestion(code(foo))]
   |                       ^^^ maybe a missing crate `core`?

error[E0433]: failed to resolve: maybe a missing crate `core`?
  --> $DIR/diagnostic-derive.rs:898:25
   |
LL |     #[suggestion(code = 3)]
   |                         ^ maybe a missing crate `core`?

error: cannot find attribute `nonsense` in this scope
  --> $DIR/diagnostic-derive.rs:62:3
   |
LL | #[nonsense(no_crate_example, code = "E0123")]
   |   ^^^^^^^^

error: cannot find attribute `nonsense` in this scope
  --> $DIR/diagnostic-derive.rs:165:7
   |
LL |     #[nonsense]
   |       ^^^^^^^^

error: cannot find attribute `error` in this scope
  --> $DIR/diagnostic-derive.rs:648:3
   |
LL | #[error(no_crate_example, code = "E0123")]
   |   ^^^^^

error: cannot find attribute `warn_` in this scope
  --> $DIR/diagnostic-derive.rs:656:3
   |
LL | #[warn_(no_crate_example, code = "E0123")]
   |   ^^^^^ help: a built-in attribute with a similar name exists: `warn`

error: cannot find attribute `lint` in this scope
  --> $DIR/diagnostic-derive.rs:664:3
   |
LL | #[lint(no_crate_example, code = "E0123")]
   |   ^^^^ help: a built-in attribute with a similar name exists: `link`

error: cannot find attribute `lint` in this scope
  --> $DIR/diagnostic-derive.rs:672:3
   |
LL | #[lint(no_crate_example, code = "E0123")]
   |   ^^^^ help: a built-in attribute with a similar name exists: `link`

error: cannot find attribute `multipart_suggestion` in this scope
  --> $DIR/diagnostic-derive.rs:717:3
   |
LL | #[multipart_suggestion(no_crate_suggestion)]
   |   ^^^^^^^^^^^^^^^^^^^^

error: cannot find attribute `multipart_suggestion` in this scope
  --> $DIR/diagnostic-derive.rs:720:3
   |
LL | #[multipart_suggestion()]
   |   ^^^^^^^^^^^^^^^^^^^^

error: cannot find attribute `multipart_suggestion` in this scope
  --> $DIR/diagnostic-derive.rs:725:7
   |
LL |     #[multipart_suggestion(no_crate_suggestion)]
   |       ^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find value `nonsense` in module `crate::fluent_generated`
  --> $DIR/diagnostic-derive.rs:76:8
   |
LL | #[diag(nonsense, code = "E0123")]
   |        ^^^^^^^^ not found in `crate::fluent_generated`

error[E0425]: cannot find value `__code_34` in this scope
  --> $DIR/diagnostic-derive.rs:894:10
   |
LL | #[derive(Diagnostic)]
   |          ^^^^^^^^^^ not found in this scope
   |
   = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Hello: IntoDiagnosticArg` is not satisfied
  --> $DIR/diagnostic-derive.rs:387:12
   |
LL | #[derive(Diagnostic)]
   |          ---------- required by a bound introduced by this call
...
LL |     other: Hello,
   |            ^^^^^ the trait `IntoDiagnosticArg` is not implemented for `Hello`
   |
   = help: normalized in stderr
note: required by a bound in `DiagnosticBuilder::<'a, G>::set_arg`
  --> $COMPILER_DIR/rustc_errors/src/diagnostic_builder.rs:LL:CC
   = note: this error originates in the macro `forward` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 85 previous errors

Some errors have detailed explanations: E0277, E0425, E0433.
For more information about an error, try `rustc --explain E0277`.
