- // MIR for `call` before Inline
+ // MIR for `call` after Inline
  
  fn call(_1: &T) -> i32 {
      debug s => _1;
      let mut _0: i32;
      let mut _2: &T;
+     scope 1 (inlined <T as Foo>::bar) {
+         debug self => _2;
+     }
  
      bb0: {
          StorageLive(_2);
          _2 = &(*_1);
-         _0 = <T as Foo>::bar(Spanned { node: move _2, span: $DIR/inline_generically_if_sized.rs:16:5: 16:6 (#0) }) -> [return: bb1, unwind unreachable];
-     }
- 
-     bb1: {
+         _0 = const 0_i32;
          StorageDead(_2);
          return;
      }
  }
  
