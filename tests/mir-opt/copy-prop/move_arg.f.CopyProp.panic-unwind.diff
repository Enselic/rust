- // MIR for `f` before CopyProp
+ // MIR for `f` after CopyProp
  
  fn f(_1: T) -> () {
      debug a => _1;
      let mut _0: ();
      let _2: T;
      let _3: ();
      let mut _4: T;
      let mut _5: T;
      scope 1 {
-         debug b => _2;
+         debug b => _1;
      }
  
      bb0: {
-         StorageLive(_2);
-         _2 = _1;
          StorageLive(_3);
-         StorageLive(_4);
-         _4 = _1;
-         StorageLive(_5);
-         _5 = _2;
-         _3 = g::<T>(Spanned { node: move _4, span: $DIR/move_arg.rs:8:7: 8:8 (#0) }, Spanned { node: move _5, span: $DIR/move_arg.rs:8:10: 8:11 (#0) }) -> [return: bb1, unwind continue];
+         _3 = g::<T>(Spanned { node: _1, span: $DIR/move_arg.rs:8:7: 8:8 (#0) }, Spanned { node: _1, span: $DIR/move_arg.rs:8:10: 8:11 (#0) }) -> [return: bb1, unwind continue];
      }
  
      bb1: {
-         StorageDead(_5);
-         StorageDead(_4);
          StorageDead(_3);
          _0 = const ();
-         StorageDead(_2);
          return;
      }
  }
  
