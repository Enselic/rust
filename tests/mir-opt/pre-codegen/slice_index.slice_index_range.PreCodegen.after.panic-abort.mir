// MIR for `slice_index_range` after PreCodegen

fn slice_index_range(_1: &[u32], _2: std::ops::Range<usize>) -> &[u32] {
    debug slice => _1;
    debug index => _2;
    let mut _0: &[u32];
    scope 1 (inlined #[track_caller] core::slice::index::<impl Index<std::ops::Range<usize>> for [u32]>::index) {
        debug self => _1;
        debug index => _2;
    }

    bb0: {
        _0 = <std::ops::Range<usize> as SliceIndex<[u32]>>::index(Spanned { node: move _2, span: $SRC_DIR/core/src/slice/index.rs:18:9: 18:14 (#0) }, Spanned { node: move _1, span: $SRC_DIR/core/src/slice/index.rs:LL:COL (#0) }) -> [return: bb1, unwind unreachable];
    }

    bb1: {
        return;
    }
}
