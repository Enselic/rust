//! Tests that for `--crate-type rlib`` there is no profiler runtime injected. This
//! is needed for
//! ```sh
//! RUSTFLAGS="-Cinstrument-coverage" cargo build -Zbuild-std=std,profiler_builtins
//! ```
//! to work. See <https://github.com/rust-lang/rust/pull/133300>.

use run_make_support::rustc;

fn main() {
    let stderr = rustc()
        .env("RUSTC_LOG", "rustc_metadata::creader=info")
        .input("test.rs")
        .opt()
        .arg("-Cinstrument-coverage")
        .arg("--crate-type=rlib")
        .run()
        .stderr_utf8();

    let mut names: Vec<&str> = vec![];
    let mut in_resolved_crates = false;
    for line in stderr.lines() {
        if !in_resolved_crates {
            in_resolved_crates = line.starts_with(" INFO rustc_metadata::creader resolved crates:");
        } else {
            if line.starts_with("   name: ") {
                names.push(line.strip_prefix("   name: ").unwrap());
            } else if !line.starts_with("   ") {
                break;
            }
        }
    }

    // Make sure we see "core" and "std" so we know parsing works at all.
    assert!(names.contains(&"core"));
    assert!(names.contains(&"std"));

    // Now make sure "profiler_builtins" has not been injected since we built an rlib.
    assert!(!names.contains(&"profiler_builtins"));
}

/* Example stderr that we parse follows. Generated by
https://github.com/rust-lang/rust/blob/b4cfcd9a8f82c689/compiler/rustc_metadata/src/creader.rs#L133

 INFO rustc_metadata::creader resolved crates:
   name: std
   cnum: 1
   hash: df6056d905861dad8c1fb84eaadfee3d
   reqd: Explicit
    rlib: .../stable-x86_64-unknown-linux-gnu/lib/libstd-22be60875a4ac8d7.rlib
   name: core
   cnum: 2
   hash: d2a9b639158d9bf64905c675d97640f2
   reqd: Explicit
    rlib: .../stable-x86_64-unknown-linux-gnu/lib/libcore-46b25da62cc69443.rlib
   name: compiler_builtins
   cnum: 3
   hash: 7130505301859f8a39afc97a37b8d758
   reqd: Explicit
    rlib: .../stable-x86_64-unknown-linux-gnu/lib/libcompiler_builtins-c71612932829263c.rlib

*/
